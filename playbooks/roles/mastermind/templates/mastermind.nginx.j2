# {{ ansible_managed }}

map $uri $auth_msg {
    default          "No soup for you!";
    /sabnzbd/api     "off";
    /sickbeard/api   "off";
    /couchpotato/api "off";
    /sonarr/api      "off";
}

server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;

    location / {
        rewrite ^ https://$host$request_uri permanent;
    }

    location = /nginx_stub_status {
        allow 127.0.0.1;
        deny all;

        stub_status on;
    }
}

server {
    listen 443 default;

    root /var/www/;
    index index.php index.html index.htm;

    ssl on;
    ssl_certificate {{ mastermind_ssl_cert_path }};
    ssl_certificate_key {{ mastermind_ssl_key_path }};

    ssl_session_timeout 5m;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;

    auth_basic              $auth_msg;
    auth_basic_user_file    /etc/nginx/.htpasswd;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_redirect     off;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_cache_bypass $cookie_session;
    proxy_no_cache $cookie_session;
    proxy_buffers 32 4k;

    location / {
        if ($http_x_plex_device_name != '') {
            rewrite ^/(.*)$ https://$host/plex/$1;
        }

        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
        # Uncomment to enable naxsi on this location
        # include /etc/nginx/naxsi.rules
    }

    location /sabnzbd {
        proxy_redirect http:// https://;

        proxy_pass http://{{ sabnzbd_host }}:{{ sabnzbd_port }}/sabnzbd;
    }

    location /plex {
        if ($http_x_plex_device_name = '') {
            rewrite ^/plex$ https://$host/plex/web/index.html;
        }

        rewrite /plex(/.*) $1 break;

        proxy_set_header Upgrade    $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_pass http://localhost:32400/;
    }

    location /sickbeard {
        proxy_redirect http:// https://;

        proxy_pass http://{{ sickbeard_host }}:{{ sickbeard_port }}/{{ sickbeard_web_root.lstrip('/') }};
    }

    location /couchpotato {
        proxy_pass http://{{ couchpotato_host }}:{{ couchpotato_port }}/{{ couchpotato_url_base.lstrip('/') }};
    }

    location /sonarr {
        proxy_redirect http:// https://;

        proxy_pass http://{{ sonarr_host }}:{{ sonarr_port }}/{{ sonarr_url_base.lstrip('/') }};
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
    	# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param PATH /usr/local/bin:/usr/bin:/bin;
        include fastcgi_params;
    }

    location /RPC2 {
        include scgi_params;
        scgi_pass {{ rtorrent_scgi_host }}:{{ rtorrent_scgi_port }};
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny all;
    }
}
